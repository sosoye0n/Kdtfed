// 조건문 : 어떤 조건에 부합하냐, 부합하지 않느냐에 따라 실행시킬 실행명령을 별도로 관리하는 것
// 부합하면 A / 아니면 B

// 조건문이 실행되기 위해서는 문법을 따라야
// 조건식 & 실행문

// if문 : 만약 ~라면 > 조건식이 참이어야 실행
// if ~ else문 : 만약 ~라면, 하지만 만약 ~가 아니라면 까지 포함
// else if문 : if 혹은 else 외 조건식을 제공하고자 할 때

// switch문 : 여러가지의 선택지를 제공하고 해당 선택지 가운데서 어떤 한가지를 선택했을떄의 대한 실행 > 결과값 도출

// const num01 = Number(prompt("첫번째 숫자를 입력하세요"));
// const num02 = Number(prompt("두번째 숫자를 입력하세요"));

// const num01 = 10;
// const num02 = 5;

// if (num01 > num02) console.log(`${num01}은 ${num02}보다 크다`);
// else console.log(`${num02}은 ${num01}보다 크다`);

// 프로그래밍 언어
// 전통적으로 프로그래밍 언어를 2가지 부류로 나눠라
// 실행문 지향언어 VS 표현식 지향언어

// 대부분의 프로그래밍 언어는 실행문 지향언어
// C언어 / 자바 => 객체지향언어 => JS 실행문 지향언어
// 실행문 지향언어의 특징 : 함수 선언, 호출 -> 로컬컴퓨터 CPU 실행 => 실행된 결과를 개발자에게 알려주지 x

// 표현식 지향언어 -> 루비 // 코틀린
// 자바스크립트 -> 실행문 & 표현식 모두 사용할 수 있는 언어 > 다중 패러다임 언어

// {리턴 값을 반환하겠다는 의미} -> but 생략가능!(다중패러다임언어-이리하나 저리하나 값을 출력)
