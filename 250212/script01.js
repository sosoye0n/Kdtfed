/* 자바스크립트 기본적으로 내장되어 있는 객체
1. Math() : 수학 객체
2. Date() : 날짜 객체 **오늘     

* class
자주 반복적으로 빈번하게 유사한 형태의 객체를 만들어서 사용해야 하는 경우, 일일이 그때마다 객체를 생성해야하는 비효율성을 개선하기 위해 사용           

class를 통해 갹체의 모델을 하나 생성

모델 > 실제 객체로서의 역할 하지 x

다만, 해당 모델을 가져다가 사용을 하면, 객체(*최초에 설정해놓은 모델이 가지고있는 속성 & 메서드 함수를 그대로 상속받아서 사용 가능)가 탄생

Class를 통해서 만들어진 모델을 가져다가 사용할 때에는 반드시 규칙! > new라는 예약어 사용하기로 약속

Class를 통해서 만들어진 해당 모델 => Prototype

/////

*/
// date함수 = prototype
// new Date();

// 첫 줄, 셋째 줄 같은 의미 > 이해해야 함
// 왜 이렇게 작동되는지를 이해해야

// getMonth만 주의! : 0부터 시작 > 무조건 +1

/*특정 날짜 찾아오고 싶다면
1. new Date("2025-01-14")
Tue Jan 14 2025 09:00:00 GMT+0900 (한국 표준시)
- 대시형식 : 9시를 기준 값으로

2. new Date(2025.1,10)
Sat Nov 01 2025 00:00:00 GMT+0900 (한국 표준시)
- , 00:00

3. 시간 값까지
new Date("2025-02-14T23:59")
Fri Feb 14 2025 23:59:00 GMT+0900 (한국 표준시)
- 대시형태이지만 T입력 > 특정 시간 값까지

*/

let arr = new Array();
console.log(arr);

const arr01 = [1, 2, 3];

/*
자바스크립트 내부에서 시간관련된 무언가를 할 때 반드시 인지해야하는 기본 상식

1. 대부분의 프로그래밍 언어에서는 시간을 인간 친화적인 방식으로 카운트를 하지 않는다

**밀리초(ms) 단위 개념 사용
1초 = 1000ms
1분 = 60 * 1000 = 60,000ms
1시간 = 60 * 60 * 1000 = 3,600,000ms
1일 = 24 * 60 * 60 * 1000

2. 자바스크립트는 지금 이순간에도 우리의 인간계 시간을 밀리초로 변환해서 계산
- 1970년 1월 1일 기준으로 누적되고 있음

*/
